openapi: '3.1.0'
info:
  title: TokyoDisneyResortAPI
  version: 1.0.0
  description: |
    東京ディズニーリゾート（東京ディズニーランド/東京ディズニーシー）の施設運営情報を提供するAPI
servers:
  - url: http://127.0.0.1/v1
    description: 東京ディズニーランド/東京ディズニーシーの施設運営情報API
paths:
  /{parkType}/attraction:
    get:
      operationId: getAttractionStatus
      parameters:
      - name: parkType
        required: true
        in: path
        description: 東京ディズニーランド/東京ディズニーシーのアトラクション運営情報を返す
        schema:
          type: string
          enum: ['tdl', 'tds']
      responses:
        '200':
          description: アトラクション運営情報取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attraction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: アトラクション運営情報が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 404
                message: "アトラクション情報が見つかりませんでした"
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '502':
          description: ゲートウェイエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 502
                message: "外部サービスとの通信に失敗しました"
  /{parkType}/greeting:
    get:
      operationId: getGreetingStatus
      parameters:
      - name: parkType
        required: true
        in: path
        description: 東京ディズニーランド/東京ディズニーシーのグリーティング運営情報を返す
        schema:
          type: string
          enum: ['tdl', 'tds']
      responses:
        '200':
          description: グリーティング運営情報取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: グリーティング運営情報が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 404
                message: "グリーティング情報が見つかりませんでした"
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '502':
          description: ゲートウェイエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 502
                message: "外部サービスとの通信に失敗しました"
  /{parkType}/restaurant:
    get:
      operationId: getRestaurantStatus
      parameters:
      - name: parkType
        required: true
        in: path
        description: 東京ディズニーランド/東京ディズニーシーのレストラン運営情報を返す
        schema:
          type: string
          enum: ['tdl', 'tds']
      responses:
        '200':
          description: レストラン運営情報取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: レストラン運営情報が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 404
                message: "レストラン情報が見つかりませんでした"
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '502':
          description: ゲートウェイエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                statusCode: 502
                message: "外部サービスとの通信に失敗しました"
components:
  schemas:
    Attraction:
      type: object
      required:
        - area
        - name
        - iconTags
      properties:
        area:
          type: string
          description: エリア名
          example: "メディテレーニアンハーバー"
        name:
          type: string
          description: アトラクション名
          example: "ディズニーシー・トランジットスチーマーライン"
        iconTags:
          type: array
          description: タグのリスト
          items:
            type: string
          example: ["ライド/移動・周遊", "ディズニー・プレミアアクセス対象"]
        imageURL:
          type: string
          format: uri
          description: サムネイルURL
          example: "https://media1.tokyodisneyresort.jp/images/adventure/attraction/121_thum_name.jpg"
        detailURL:
          type: string
          description: 詳細ページのURL
          example: "/tds/attraction/detail/227/"
        facilityID:
          type: string
          description: 施設ID
          example: "227"
        facilityStatus:
          type: string
          description: 施設の運営状況
          example: "運営・公演中止"
        standbyTime:
          type: string
          description: アトラクションの待ち時間
          example: "30"
        operatingStatus:
          type: string
          description: 運営状況
          example: "案内終了"
        dpaStatus:
          type: string
          description: DPAの発券状況
          example: "販売していません"
        fsStatus:
          type: string
          description: その他パスの発券状況
          example: "40周年記念プライオリティパス発行なし"
        updateTime:
          type: string
          description: 最終更新時間
          example: "21:00"
        operatingHoursFrom:
          type: string
          description: 案内開始時間
          example: "9:00"
        operatingHoursTo:
          type: string
          description: 案内終了時間
          example: "21:00"
    Greeting:
      type: object
      required:
        - area
        - name
        - character
      properties:
        area:
          type: string
          description: エリア名
          example: "ワールドバザール"
        name:
          type: string
          description: グリーティング名
          example: "ミッキーのグリーティングトレイル"
        character:
          type: string
          description: キャラクター名
          example: "ミッキーマウス"
        imageURL:
          type: string
          format: uri
          description: サムネイルURL
          example: "https://media1.tokyodisneyresort.jp/images/adventure/greeting/101_thum_name.jpg"
        detailURL:
          type: string
          description: 詳細ページのURL
          example: "/tdl/greeting/detail/101/"
        facilityID:
          type: string
          description: 施設ID
          example: "101"
        facilityName:
          type: string
          description: 施設名
          example: "ミッキーのグリーティングトレイル"
        facilityStatus:
          type: string
          description: 施設の運営状況
          example: "運営中"
        standbyTime:
          type: string
          description: 待ち時間
          example: "45"
        operatingHours:
          type: array
          description: 運営時間情報
          items:
            type: object
            properties:
              operatingHoursFrom:
                type: string
                description: 運営開始時間
                example: "10:00"
              operatingHoursTo:
                type: string
                description: 運営終了時間
                example: "19:00"
              operatingStatus:
                type: string
                description: 運営状況
                example: "案内中"
        useStandbyTimeStyle:
          type: boolean
          description: 待ち時間スタイルを使用するか
          example: true
        updateTime:
          type: string
          description: 最終更新時間
          example: "14:30"
    Restaurant:
      type: object
      required:
        - area
        - name
        - iconTags
      properties:
        area:
          type: string
          description: エリア名
          example: "ワールドバザール"
        name:
          type: string
          description: レストラン名
          example: "イーストサイド・カフェ"
        iconTags:
          type: array
          description: タグのリスト
          items:
            type: string
          example: ["テーブルサービスレストラン", "スイーツ"]
        imageURL:
          type: string
          format: uri
          description: サムネイルURL
          example: "https://media1.tokyodisneyresort.jp/images/adventure/restaurant/157_thum_name.jpg"
        detailURL:
          type: string
          description: 詳細ページのURL
          example: "/tdl/restaurant/detail/157/"
        reservationURL:
          type: string
          description: 予約ページのURL
          example: "/tdl/restaurant/book/157/"
        facilityID:
          type: string
          description: 施設ID
          example: "157"
        facilityName:
          type: string
          description: 施設名
          example: "イーストサイド・カフェ"
        facilityStatus:
          type: string
          description: 施設の運営状況
          example: "営業中"
        standbyTimeMin:
          type: string
          description: レストランの待ち時間（最小）
          example: "15"
        standbyTimeMax:
          type: string
          description: レストランの待ち時間（最大）
          example: "30"
        operatingHours:
          type: array
          description: 運営時間情報
          items:
            type: object
            properties:
              operatingHoursFrom:
                type: string
                description: 営業開始時間
                example: "08:30"
              operatingHoursTo:
                type: string
                description: 営業終了時間
                example: "22:00"
              operatingStatus:
                type: string
                description: 運営状況
                example: "営業中"
        useStandbyTimeStyle:
          type: boolean
          description: 待ち時間スタイルを使用するか
          example: true
        updateTime:
          type: string
          description: 最終更新時間
          example: "14:30"
        popCornFlavor:
          type: string
          description: ポップコーンのフレーバー（ポップコーンワゴンの場合）
          example: "キャラメル"
    ErrorResponse:
      type: object
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: integer
          format: int32
          description: HTTPステータスコード
          example: 400
        message:
          type: string
          description: エラーメッセージ
          example: "無効なリクエストパラメータ"
  responses:
    BadRequest:
      description: リクエストパラメータが無効です
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            statusCode: 400
            message: "無効なパラメータが含まれています"
    UnprocessableEntity:
      description: 処理できないエンティティ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            statusCode: 422
            message: "リクエストデータの処理に失敗しました"
    TooManyRequests:
      description: リクエスト制限を超えました
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            statusCode: 429
            message: "リクエスト回数の上限に達しました。しばらく時間をおいて再試行してください"
    ServerError:
      description: サーバー内部エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            statusCode: 500
            message: "サーバー内部でエラーが発生しました"
